version: "3.8"

networks:
  mactwo-net:
    driver: bridge

volumes:
  redis_data:
  kafka_data:
  prometheus_data:
  grafana_data:

services:
  # --- CÁC DỊCH VỤ HẠ TẦNG ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: mactwo_zookeeper
    networks:
      - mactwo-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: mactwo_kafka
    hostname: kafka
    networks:
      - mactwo-net
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  redis:
    image: redis:7-alpine
    container_name: mactwo_redis
    networks:
      - mactwo-net
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  # --- CÁC DỊCH VỤ GIÁM SÁT ---
  prometheus:
    image: prom/prometheus:latest
    container_name: mactwo_prometheus
    networks:
      - mactwo-net
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: mactwo_grafana
    networks:
      - mactwo-net
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: mactwo_zipkin
    networks:
      - mactwo-net
    ports:
      - "9411:9411"

  # --- DỊCH VỤ ỨNG DỤNG ---
  mactwo-command-service:
    container_name: mactwo-command-service
    build:
      context: .
      dockerfile: mactwo-command-service/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - mactwo-net
    environment:
      # RDS MySQL config
      - SPRING_DATASOURCE_URL=jdbc:mysql://mactwo.chi0okgq8fjj.ap-northeast-1.rds.amazonaws.com:3306/mactwo_command_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin123
      # Redis + Kafka
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      # JWT config
      - SERVER_SERVLET_CONTEXT_PATH=/api/v1
      - APPLICATION_SECURITY_JWT_SECRET_KEY=aVeryLongAndSecureSecretKeyForMactwoEcommerceApplicationThatIsAtLeast256Bits
      - APPLICATION_SECURITY_JWT_EXPIRATION=86400000
      # Zipkin tracing
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
      zipkin:
        condition: service_started

  mactwo-query-service:
    container_name: mactwo-query-service
    build:
      context: .
      dockerfile: mactwo-query-service/Dockerfile
    ports:
      - "8082:8082"
    networks:
      - mactwo-net
    environment:
      # RDS MySQL config (có thể dùng DB khác nếu bạn muốn)
      - SPRING_DATASOURCE_URL=jdbc:mysql://mactwo.chi0okgq8fjj.ap-northeast-1.rds.amazonaws.com:3306/mactwo_query_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin123
      # Redis + Kafka
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      # Zipkin tracing
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
      zipkin:
        condition: service_started
